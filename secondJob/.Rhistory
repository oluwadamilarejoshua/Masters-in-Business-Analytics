ts_data <- t(tsData)[2:40, ]
firstObj_data <- wholesale_customers.19052471[, -c(1, 2)]
summary(firstObj_data)
range(firstObj_data)
plot(firstObj_data)
table(is.na(firstObj_data))
kmeanClust_result <- kmeans(firstObj_data, centers = 2)
kmeanClust_result$tot.withinss
kmeanClust2_result <- kmeans(firstObj_data, centers = 2)
kmeanClust2_result$tot.withinss
kmeanClust3_result <- kmeans(firstObj_data, centers = 3)
kmeanClust3_result$tot.withinss
kmeanClust2_result <- kmeans(scale(firstObj_data), centers = 2) # 2 centroids
kmeanClust2_result$tot.withinss
kmeanClust3_result <- kmeans(scale(firstObj_data), centers = 3) # 3 centroids
kmeanClust3_result$tot.withinss
kmeanClust2_result <- kmeans(scale(firstObj_data), centers = 2) # 2 centroids
kmeanClust2_result$tot.withinss
kmeanClust2_result$size
kmeanClust2_result$centers
kmeanClust3_result <- kmeans(scale(firstObj_data), centers = 3) # 3 centroids
kmeanClust3_result$tot.withinss
kmeanClust3_result$size
kmeanClust3_result$centers
for (i in 2:25) {
kmeanClust <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- kmeanClust$tot.withinss
}
sse_vector <- vector()
for (i in 2:25) {
kmeanClust <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- kmeanClust$tot.withinss
}
length(sse_vector)
sse_vector
diff(sse_vector)
Sector <- wholesale_customers.19052471$Sector
secondObj_data <- data.frame(cbind(Sector, firstObj_data))
View(secondObj_data)
# View(secondObj_data)
plot(secondObj_data)
plot(kmeanClust3_result)
library(cluster)
library(HSAUR)
install.packages("HSAUR")
library(fpc)
install.packages("fpc")
y(cluster)
library(f
library(cluster)
library(fpc)
)
..../
install.packages("fpc")
install.packages("fpc")
library(cluster)
library(fpc)
diff(sse_vector)
library(factoextra)
install.packages("factoextra")
library(factoextra)
diff(sse_vector)
dim(firstObj_data)
sse_vector
# The optimal model
kmeanClust11_result <- kmeans(scale(firstObj_data), centers = 11)
plotcluster(firstObj_data, kmeanClust11_result$cluster)
plotcluster(firstObj_data, kmeanClust3_result$cluster)
sse_vector
?plotcluster
plotcluster(firstObj_data, kmeanClust3_result$cluster, bw = T)
plotcluster(firstObj_data, kmeanClust3_result$cluster)
kmeanClust11_result
kmeanClust2_result
kmeanClust3_result
kmeanClust11_result
sse_vector <- vector()
clustModels <- vector()
for (i in 2:25) {
clustModels[i] <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- clustModels[i]$tot.withinss
}
sse_vector <- vector()
clustModels <- vector()
for (i in 2:25) {
kmeanClust <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- kmeanClust$tot.withinss
clustModels[i] <- kmeanClust
}
warnings()
sse_vector <- vector()
for (i in 2:25) {
kmeanClust <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- kmeanClust$tot.withinss
}
kmed1 <- pam(secondObj_data, k = 2)
kmed1
plotcluster(secondObj_data, kmed1$clustering)
plotcluster(secondObj_data, kmed1$silinfo)
fviz_cluster(kmed1, data = secondObj_data)
kmed11 <- pam(secondObj_data, k = 11)
kmed1
fviz_cluster(kmed11, data = secondObj_data)
kmed5 <- pam(secondObj_data, k = 5)
kmed5
fviz_cluster(kmed5, data = secondObj_data)
# The optimal model
kmeanClust5_result <- kmeans(scale(firstObj_data), centers = 5)
kmeanClust5_result
plotcluster(firstObj_data, kmeanClust5_result$cluster)
# The optimal model
kmeanClust12_result <- kmeans(scale(firstObj_data), centers = 12)
kmeanClust12_result
plotcluster(firstObj_data, kmeanClust12_result$cluster)
# The optimal model
kmeanClust12_result <- kmeans(scale(firstObj_data), centers = 13)
kmeanClust12_result
plotcluster(firstObj_data, kmeanClust12_result$cluster)
# The optimal model
kmeanClust12_result <- kmeans(scale(firstObj_data), centers = 12)
plotcluster(firstObj_data, kmeanClust12_result$cluster)
kmeanClust12_result
sse_vector
diff(sse_vector)
kmeanClust10_result <- kmeans(scale(firstObj_data), centers = 10)
kmeanClust10_result
plotcluster(firstObj_data, kmeanClust10_result$cluster)
kmed5 <- pam(secondObj_data, k = 5)
kmed5
fviz_cluster(kmed5, data = secondObj_data)
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 4)
kmeanClust4_result
plotcluster(firstObj_data, kmeanClust4_result$cluster)
kmed4 <- pam(secondObj_data, k = 4)
kmed4
fviz_cluster(kmed4, data = secondObj_data)
kmeanClust4_result
kmeanClust4_result$cluster
library(readxl)
Agric_data <- read_excel("C:/Users/Josh/Desktop/Projects/Atoki/Agric data.xlsx")
View(Agric_data)
getwd()
write.csv(sse_vector, file = "SSE_vector.csv")
write.csv(tseries::t(sse_vector), file = "SSE_vector.csv")
library(tidyverse)
tseries::t(sse_vector) %>% write.csv(., file = "SSE_vector.csv")
transpose(as.list(sse_vector)) %>% write.csv(., file = "SSE_vector.csv")
transpose(sse_vector) %>%
write.csv(., file = "SSE_vector.csv")
library(tseries)
t(sse_vector) %>%
write.csv(., file = "SSE_vector.csv")
index_ <- c(1:20)
theSSE <- as.data.frame(cbind(index_, sse_vector))
index_
sse_vector
index_ <- c(1:25)
theSSE <- as.data.frame(cbind(index_, sse_vector))
t(theSSE) %>%
write.csv(., file = "SSE_vector.csv")
theSSW <- as.data.frame(cbind(index_, sse_vector))
t(theSSW) %>%
write.csv(., file = "SSW_vector.csv")
diff(sse_vector)
theSSE <- as.data.frame(cbind(index_, diff(sse_vector)))
t(theSSE) %>%
write.csv(., file = "SSE_vector.csv")
theSSE <- as.data.frame(cbind(index_[-25], diff(sse_vector)))
t(theSSE) %>%
write.csv(., file = "SSE_vector.csv")
colnames(theSSE) <- c("index", "SSE")
t(theSSE) %>%
write.csv(., file = "SSE_vector.csv")
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 8)
kmeanClust4_result
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 9)
kmeanClust4_result
# The optimal model
kmeanClust10_result <- kmeans(scale(firstObj_data), centers = 10)
kmeanClust10_result
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 11)
kmeanClust4_result
kmeanClust10_result
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 8)
kmeanClust4_result
kmeanClust4_result <- kmeans(scale(firstObj_data), centers = 9)
kmeanClust4_result
kmeanClust10_result$cluster
kmeanClust10_result$centers
kmean10_centers <- kmeanClust10_result$centers
write.csv(kmean10_centers, file = "optimalClustCenters.csv")
plotcluster(firstObj_data, kmeanClust10_result$cluster)
aggrG_ <- aggregate(firstObj_data, by = list(cluster = kmeanClust10_result$cluster), mean)
aggrG_
write.csv(aggrG_, file = "aggregated.csv")
library(factoextra)
fviz_nbclust(secondObj_data, pam, method = "wss")
install.packages("tree")
library(tidyverse)
str(secondObj_data)
secondObj_data[i] <- as.numeric(secondObj_data[i])
secondObj_data[i] <- as.numeric(secondObj_data[i])
optSelDat_ <- secondObj_data %>%
transmute(
Fresh <- as.numeric(Fresh),
Milk <- as.numeric(Milk),
Grocery <- as.numeric(Grocery),
Frozen <- as.numeric(Frozen),
DetergentsAndPaper <- as.numeric(DetergentsAndPaper),
Delicatessen <- as.numeric(Delicatessen)
)
fviz_nbclust(secondObj_data, pam, method = "wss")
optSelDat_ <- secondObj_data %>%
transmute(
Fresh <- as.numeric(Fresh),
Milk <- as.numeric(Milk),
Grocery <- as.numeric(Grocery),
Frozen <- as.numeric(Frozen),
DetergentsAndPaper <- as.numeric(DetergentsAndPaper),
Delicatessen <- as.numeric(Delicatessen)
) %>%
.[, -1]
fviz_nbclust(secondObj_data, pam, method = "wss")
fviz_nbclust(scale(secondObj_data), pam, method = "wss")
scaleddata2 <- scale(secondObj_data)
fviz_nbclust(x = scaleddata2, pam, method = "wss")
scaleddata2 <- scale(optSelDat_)
fviz_nbclust(x = scaleddata2, pam, method = "wss")
scaleddata2 <- scale(secondObj_data)
fviz_nbclust(x = scaleddata2, pam, method = "wss")
kmed5 <- pam(secondObj_data, k = 5)
kmed5
fviz_cluster(kmed5, data = secondObj_data)
kmed5$clusinfo
clusterInfo <- kmed5$clusinfo
write.csv(clusterInfo, file = "kmedoidsClusterInfo.csv")
kmeanClust10_result
kmed5
aggrG_medoids <- aggregate(scaleddata2, by = list(cluster = kmed5$medoids), median)
str(scaleddata2)
aggrG_medoids <- aggregate(scaleddata2, by = list(cluster = kmed5$medoids), mean)
fviz_cluster(kmed5, data = secondObj_data)
# Preparation of data to be used for first task
load(wholesale_customers.19052471)
theData <- write.csv(wholesale_customers.19052471, file = "assData.csv")
# Preparation of data to be used for first task
wholesale_customers.19052471 <- read.csv("assData.csv")
firstObj_data <- wholesale_customers.19052471[, -c(1, 2)]
library(car)
library(tseries)
dataToConsider <- Agric_data[, 1]
View(
dataToConsider
)
dataToConsider <- Agric_data[, -1]
View(dataToConsider)
baseModel <- lm(RGDP ~ ., data = dataToConsider)
baseModel
library(car)
library(caret)
vif(baseModel)
baseModel <- lm(RGDP ~ ., data = scale(dataToConsider))
dataToConsider
baseModel <- lm(RGDP ~ ., data = dataToConsider)
baseModel
vif(baseModel)
Agric_data <- read.csv("analyze.csv")
library(car)
Agric_data <- read.csv("analyze.csv")
dataToConsider <- Agric_data[, -1]
View(dataToConsider)
baseModel <- lm(RGDP ~ ., data = dataToConsider)
baseModel
vif(baseModel)
baseModel <- lm(RGDP ~ ., data = dataToConsider)
str(dataToConsider)
dataToConsider[i] <- as.numeric(dataToConsider[i])
dataToConsider[, i] <- as.numeric(dataToConsider[, i])
for(i in 1:5)){
for(i in 1:5){
dataToConsider[, i] <- as.numeric(dataToConsider[, i])
}
str(dataToConsider)
baseModel <- lm(RGDP ~ ., data = dataToConsider)
baseModel
vif(baseModel)
library(cluster)
library(fpc)
library(tidyverse)
library(factoextra)
library(tseries)
theData <- write.csv(wholesale_customers.19052471, file = "assData.csv")
# K-MEAN CLUSTERING ANALYSIS ----------------------------------------------
# Preparation of data to be used for first task
firstObj_data <- wholesale_customers.19052471[, -c(1, 2)]
summary(firstObj_data)
dim(firstObj_data)
plot(firstObj_data)   # Checking relationships between pairs of variables
table(is.na(firstObj_data)) # Checking for missing values
kmeanClust2_result <- kmeans(scale(firstObj_data), centers = 2) # 2 centroids
kmeanClust2_result$tot.withinss
kmeanClust2_result$size
kmeanClust2_result$centers
kmeanClust3_result <- kmeans(scale(firstObj_data), centers = 3) # 3 centroids
kmeanClust3_result$tot.withinss
kmeanClust3_result$size
kmeanClust3_result$centers
# Loop for iterating over a set of centroids
sse_vector <- vector()
for (i in 2:15) {
kmeanClust <- kmeans(scale(firstObj_data), centers = i)
sse_vector[i] <- kmeanClust$tot.withinss
}
length(sse_vector)
sse_vector
index_ <- c(1:25)
theSSW <- as.data.frame(cbind(index_, sse_vector))
t(theSSW) %>%
write.csv(., file = "SSW_vector.csv")
theSSE <- as.data.frame(cbind(index_[-25], diff(sse_vector)))
colnames(theSSE) <- c("index", "SSE")
t(theSSE) %>%
write.csv(., file = "SSE_vector.csv")
# The optimal model
kmeanClust10_result <- kmeans(scale(firstObj_data), centers = 10)
kmean10_centers <- kmeanClust10_result$centers
write.csv(kmean10_centers, file = "optimalClustCenters.csv")
aggrG_ <- aggregate(firstObj_data, by = list(cluster = kmeanClust10_result$cluster), mean)
write.csv(aggrG_, file = "aggregated.csv")
plotcluster(firstObj_data, kmeanClust10_result$cluster)
# K-MEDIOD CLUSTERING ANALYSIS --------------------------------------------
# Preparation of data for the second task
Sector <- wholesale_customers.19052471$Sector
secondObj_data <- data.frame(cbind(Sector, firstObj_data))
str(secondObj_data)
optSelDat_ <- secondObj_data %>%
transmute(
Fresh <- as.numeric(Fresh),
Milk <- as.numeric(Milk),
Grocery <- as.numeric(Grocery),
Frozen <- as.numeric(Frozen),
DetergentsAndPaper <- as.numeric(DetergentsAndPaper),
Delicatessen <- as.numeric(Delicatessen)
)
scaleddata2 <- scale(optSelDat_)
fviz_nbclust(x = scaleddata2, pam, method = "wss")
kmed5 <- pam(secondObj_data, k = 5)
clusterInfo <- kmed5$clusinfo
write.csv(clusterInfo, file = "kmedoidsClusterInfo.csv")
# aggrG_medoids <- aggregate(scaleddata2, by = list(cluster = kmed5$medoids), mean)
fviz_cluster(kmed5, data = secondObj_data)
